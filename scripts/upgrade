#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action=stop --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

if [ -z "${language:-}" ]; then
    # If upgrading from a version which doesn't support translations, set language to English by default
    language=en
    ynh_app_setting_set --key=language --value=$language
fi

# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=export --value=none
if [ -z "${export:-}" ]; then
	export=none
	ynh_app_setting_set --key=export --value=$export
fi

# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=path --value="/"
if [ -z "${path:-}" ]; then
	path="/"
	ynh_app_setting_set --key=path --value=$path
fi

# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=password --value=$(ynh_string_random --length=32)
if [ -z "${password:-}" ]; then
	password=$(ynh_string_random --length=32)
	ynh_app_setting_set --key=password --value="$password"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="settings.json credentials.json"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

ynh_config_add_nginx

ynh_nodejs_install

ynh_config_add_systemd

ynh_config_add_logrotate

yunohost service add $app --description="Collaborative editor" --log="/var/log/$app/$app.log"

#=================================================
# CONFIGURE ETHERPAD
#=================================================
ynh_script_progression "Configure $app..."

abiword_path="null"
soffice_path="null"

if [[ "$export" == "abiword" ]]
then
    abiword_path="\"$(which abiword)\""
elif [[ "$export" == "libreoffice" ]]
then
    soffice_path="\"$(which soffice)\""
fi

ynh_config_add --template="settings.json" --destination="$install_dir/settings.json"
ynh_config_add --template="credentials.json" --destination="$install_dir/credentials.json"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 "$install_dir/settings.json"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/settings.json"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 600 "$install_dir/credentials.json"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/credentials.json"

#=================================================
# INSTALL ETHERPAD
#=================================================
ynh_script_progression "Installing $app..."

pushd $install_dir

    ynh_hide_warnings env node_load_PATH corepack enable &&  corepack prepare pnpm@latest --activate
 	ynh_hide_warnings env node_load_PATH pnpm --recursive i --production
    ynh_safe_rm "$install_dir/var/minified*"
popd

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action=restart --log_path=systemd --wait_until="Your Etherpad version is"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
