#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="$app" --action="stop" --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

ynh_app_setting_set_default --key=protect_against_basic_auth_spoofing --value=false

ynh_app_setting_set_default --key=language --value=en
ynh_app_setting_set_default --key=export --value=none
ynh_app_setting_set_default --key=path --value="/"
ynh_app_setting_set_default --key=password --value=$(ynh_string_random --length=32)

if [ -f "$install_dir/var/rusty2.db" ]
then
    mv "$install_dir/var/rusty2.db" "$data_dir/rusty2.db"
    ynh_config_add --template="credentials.json" --destination="$install_dir/credentials.json"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="settings.json credentials.json var"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

abiword_path="null"
soffice_path="null"

if [[ "$export" == "abiword" ]]
then
    abiword_path="\"$(which abiword)\""
elif [[ "$export" == "libreoffice" ]]
then
    soffice_path="\"$(which soffice)\""
fi

ynh_config_add --template="settings.json" --destination="$install_dir/settings.json"
ynh_config_add --template="credentials.json" --destination="$install_dir/credentials.json"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing dependencies..."

ynh_hide_warnings corepack enable && corepack prepare pnpm@latest --activate

#=================================================
# REAPPLY SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd
yunohost service add "$app" --description="Collaborative editor"

ynh_config_add_logrotate

#=================================================
# INSTALL ETHERPAD
#=================================================
ynh_script_progression "Installing $app..."

pushd $install_dir
    ynh_hide_warnings pnpm install
    ynh_hide_warnings pnpm run build:etherpad
    chown -R $app:$app ./node_modules
popd

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action=restart --log_path=systemd --wait_until="Etherpad is running"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
