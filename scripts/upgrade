#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=42

ynh_systemd_action --service_name=$app --action=stop --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=2

if [ -z "${language:-}" ]; then
    # If upgrading from a version which doesn't support translations, set language to English by default
    language=en
    ynh_app_setting_set --app=$app --key=language --value=$language
fi

if [ -z "${export:-}" ]; then
	export=none
	ynh_app_setting_set --app=$app --key=export --value=$export
fi

if [ -z "${path:-}" ]; then
	path="/"
	ynh_app_setting_set --app=$app --key=path --value=$path
fi

if [ -z "${password:-}" ]; then
	password=$(ynh_string_random --length=32)
	ynh_app_setting_set --app=$app --key=password --value="$password"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Upgrading source files..." --weight=1

ynh_setup_source --dest_dir="$install_dir" --full_replace=1 --keep="settings.json credentials.json"

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=3

ynh_add_nginx_config

ynh_install_nodejs --nodejs_version=$nodejs_version

ynh_add_systemd_config

ynh_use_logrotate --non-append

yunohost service add $app --description="Collaborative editor" --log="/var/log/$app/$app.log"

#=================================================
# CONFIGURE ETHERPAD
#=================================================
ynh_script_progression --message="Configure $app..." --weight=3

abiword_path="null"
soffice_path="null"

if [[ "$export" == "abiword" ]]
then
    abiword_path="\"$(which abiword)\""
elif [[ "$export" == "libreoffice" ]]
then
    soffice_path="\"$(which soffice)\""
fi

ynh_add_config --template="settings.json" --destination="$install_dir/settings.json"
ynh_add_config --template="credentials.json" --destination="$install_dir/credentials.json"

chmod 600 "$install_dir/settings.json"
chown $app:$app "$install_dir/settings.json"

chmod 600 "$install_dir/credentials.json"
chown $app:$app "$install_dir/credentials.json"

#=================================================
# INSTALL ETHERPAD
#=================================================
ynh_script_progression --message="Installing $app..." --weight=10

pushd $install_dir
 	ynh_use_nodejs
    ynh_exec_warn_less env $ynh_node_load_PATH corepack enable && COREPACK_ENABLE_DOWNLOAD_PROMPT=0 corepack prepare pnpm@latest --activate
 	ynh_exec_warn_less env $ynh_node_load_PATH ETHERPAD_PRODUCTION=true COREPACK_ENABLE_DOWNLOAD_PROMPT=0 bin/installDeps.sh
popd

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=6

ynh_systemd_action --service_name=$app --action=restart --log_path=systemd --line_match="Your Etherpad version is"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
